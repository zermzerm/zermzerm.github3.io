{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Alert","className","Info","재고","connect","state","reducer","alert열렸니","reducer2","useContext","재고context","useState","myalert2","myalert2변경","누른탭변경","스위치","타이머","setTimeout","console","log","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","src","width","onClick","재고변경","dispatch","type","데이터","name","quan","push","goBack","Nav","variant","defaultActiveKey","Item","Link","enentKey","eventKey","CSSTransition","in","classNames","timeout","Table","responsive","map","a","i","React","createContext","Card","Test","App","Data","shoes변경","uii변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","as","to","NavDropdown","Divider","exact","path","Jumbotron","Button","color","Provider","value","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.164746c0.chunk.js","sourcesContent":["export default\r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n] ","import React, {useEffect, useState, useContext} from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {재고context} from './App.js';\r\n\r\nimport { CSSTransition} from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n  padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size : 25px;\r\n  color : ${ props => props.색상 }\r\n`;\r\n\r\n// class Detail2 extends React.Component{\r\n//   componentDidMount(){\r\n\r\n//   }\r\n//   componentWillUnmount(){\r\n\r\n//   }\r\n// }\r\n\r\nfunction Detail(props){\r\n\r\n    let 재고 = useContext(재고context);\r\n\r\n    let[myalert2, myalert2변경] = useState(true);\r\n    let [입력값, 입력값변경] = useState('');\r\n\r\n    let[누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n      let 타이머 = setTimeout(()=>{myalert2변경(false)}, 2000)\r\n      console.log('안녕'); //재 랜더링 되는지 확인\r\n      return ()=>{ clearTimeout(타이머)} \r\n    },[]);\r\n\r\n\r\n    let { id } = useParams();\r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n      return 상품.id == id\r\n    })\r\n\r\n    let history =useHistory();\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <박스>\r\n          <제목 className=\"red\">Detail</제목>\r\n        </박스>\r\n        {/* <div className=\"my-alert2\">\r\n          <p>재고가 얼마 남지 않았습니다</p>\r\n        </div> */}\r\n        \r\n        {/* { 입력값 }\r\n        <input onChange={(e)=>{입력값변경(e.target.value)}} /> */}\r\n        \r\n        \r\n        {\r\n          myalert2 === true\r\n          ? <Alert 스위치변경={스위치변경}/>\r\n          : null\r\n        }\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}</p>\r\n\r\n          <Info 재고={props.재고}></Info>\r\n         \r\n          <button className=\"btn btn-danger\" onClick={()=>{\r\n             props.재고변경([9,11,12]);\r\n             props.dispatch({type : '항목추가', 데이터 : { id : 찾은상품.id, name : 찾은상품.title , quan: 1 }});\r\n             history.push('/cart'); //페이지 이동을 강제로 해준다 \r\n             } } >주문하기 </button> \r\n          <button className=\"btn btn-danger\" onClick={()=>{ history.goBack(); } } >뒤로가기 </button> \r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link enentKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>Tab0</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\"onClick={()=>{스위치변경(false); 누른탭변경(1)}}>Tab1</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-2\"onClick={()=>{스위치변경(false); 누른탭변경(2)}}>Tab2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n      <TabContent 누른탭={누른탭} 스위치변경={스위치변경}></TabContent>\r\n      </CSSTransition>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\nfunction TabContent(props){\r\n\r\n  useEffect(()=>{\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if(props.누른탭 === 0){\r\n    return <div>메이커는 ???이다</div>\r\n  }\r\n  else if(props.누른탭 === 1){\r\n    return <div>사이즈는 ???이다</div>\r\n  }\r\n  else if(props.누른탭 === 2){\r\n    return <div>색상은 ???이다</div>\r\n  }   \r\n\r\n}\r\n\r\nfunction Alert(props){\r\n\r\n    useEffect(()=>{\r\n      props.스위치변경(true);\r\n    });\r\n\r\n    return(\r\n    <div className=\"my-alert2\">\r\n      <p>재고가 얼마 남지 않았습니다</p>\r\n    </div>\r\n    )\r\n }\r\n\r\n\r\nfunction Info(props){\r\n  return(\r\n    <p>재고 : {props.재고[0]}</p>\r\n  )\r\n}\r\n\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n      // 상품명 : state[0].name\r\n      state : state.reducer, // store 안에 있던 모든 데이터 state 라는 이름의 props로 바꿔주셈\r\n      alert열렸니 : state.reducer2\r\n  \r\n  }\r\n}\r\n\r\nexport default connect(state를props화)(Detail);","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return(\r\n    <div>\r\n    <Table responsive=\"sm\">\r\n        <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {/* {\r\n            shoes.map((a,i)=>{\r\n              return <Card i={i} shoes={shoes[i]} key={i}/>      \r\n          })\r\n          } */}\r\n        {\r\n            props.state.map((a,i)=>{\r\n                return (\r\n                <tr key ={i}>\r\n                    <td>{ a.id }</td>\r\n                    <td>{ a.name }</td>\r\n                    <td>{ a.quan }</td>\r\n                    <td><button onClick={()=>{props.dispatch({ type : '수량증가', 데이터 : a.id }) }}>+</button> \r\n                    <button onClick={()=>{props.dispatch({type : '수량감소', 데이터 : a.id})}} >-</button>\r\n                    </td>\r\n                </tr>\r\n                )\r\n            })\r\n        }\r\n        \r\n        {/* <tr>\r\n            <td>{props.state[0].id}</td>\r\n            <td>{props.state[0].name}</td>\r\n            <td>{props.state[0].quan}</td>\r\n            <td></td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n        </tr> */}\r\n        </tbody>\r\n    </Table>\r\n    {   props.alert열렸니 ===true\r\n        ?(<div className=\"my-alert2\">\r\n        <p>지금 구매하시면 신규 할인 20%</p>\r\n        <button onClick={()=>{props.dispatch({type : '닫기누름'})}}>닫기</button>\r\n        {/* <button onClick={()=>{props.dispatch({type : '수량감소'})}} >-</button> */}\r\n        </div>)\r\n        : null\r\n    }\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction state를props화(state) {\r\n    return {\r\n        // 상품명 : state[0].name\r\n        state : state.reducer, // store 안에 있던 모든 데이터 state 라는 이름의 props로 바꿔주셈\r\n        alert열렸니 : state.reducer2\r\n    \r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart);","\nimport React, {useContext, useState} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Jumbotron,Button,Badge } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport {useHistory, useParams, Link, Route, Switch} from 'react-router-dom';\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [uii,uii변경] = useState(true);\n  let history =useHistory();\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    // 디자인\n    <div className=\"App\"> \n      <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"/\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n      </Navbar>\n      \n      <Switch>\n\n      <Route exact path='/'>\n\n      <Jumbotron className=\"background\">\n        <h1 className=\"display-3\">20% Season Off!</h1>\n        <p className=\"lead\">This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.</p>\n        <hr className=\"my-2\" />\n        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n        <p className=\"lead\">\n          <Button color=\"primary\">Learn More</Button>\n        </p>\n      </Jumbotron>\n\n\n      <div className=\"container\">\n\n\n        <재고context.Provider value={재고}>\n\n\n        <div className=\"row\">\n          \n          {\n            shoes.map((a,i)=>{\n              return <Card i={i} shoes={shoes[i]} key={i}/>      \n          })\n          }\n\n            {/* <Card shoes={shoes[0]}/>\n            <Card shoes={shoes[1]}/>\n            <Card shoes={shoes[2]}/> */}\n\n          {/* <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\"/>\n            <h4>{shoes[0].title}</h4>\n            <p>{shoes[0].content} % {shoes[0].price}</p>\n          </div>\n            \n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes2.jpg\" width=\"100%\"/>\n            <h4>상품명1</h4>\n            <p>상푸설명 % 가격</p>\n          </div>\n            \n          <div className=\"col-md-4\">\n            <img src=\"https://codingapple1.github.io/shop/shoes3.jpg\" width=\"100%\"/>\n            <h4>상품명1</h4>\n            <p>상푸설명 % 가격</p>\n          </div> */}\n            \n        </div>\n        \n        </재고context.Provider> \n\n\n        <button className=\"btn btn-primary\" onClick={()=>{\n          <UI/>\n          axios.get(' https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{\n            uii변경(false);\n            shoes변경([...shoes, ...result.data]);\n          })\n          .catch(()=>{})\n        }}> 더보기 </button>\n      </div>\n      </Route>\n\n      <Route path=\"/detail/:id\">\n\n        <재고context.Provider value={재고}>\n        <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </재고context.Provider>\n      </Route>\n\n\n      <Route path=\"/cart\">\n        <Cart></Cart>\n      </Route>\n\n\n      <Route path=\"/:id\">\n        <div> 아무거나 적었을 때 보여주세여</div>\n        <button className=\"btn btn-danger\" onClick={()=>{ history.goBack(); }}>뒤로가기</button>\n      </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props){\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return(\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/'+props.shoes.id)}}>\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg'} width=\"100%\"/>\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} % {props.shoes.price}</p>\n      {/* {'재고 : '}{재고[props.i]} */}\n      <Test></Test>\n   </div>\n  )\n}\n\nfunction Test(){\n  let 재고 = useContext(재고context);\n  return <p>{재고[0]}</p>\n}\n\nfunction UI(){\n  return (\n  <div>\n    <Badge className=\"primary\">Loading</Badge>\n  </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션){\n  if(액션.type ==='닫기누름'){\n    // state = false;\n    // return state; 해도 되고 아래처럼만 해도 된다\n    return false;\n  } \n  else{\n  return state\n  }\n}\n\n\nlet 초기값 = [\n  \n];\n\nfunction reducer(state = 초기값, 액션){ //액션은 dispatch 할떄 항목들이 전부 액션으로 들어간다\n      if(액션.type ==='항목추가'){\n\n        let found = state.findIndex((a)=>{ return a.id === 액션.데이터.id }); // a 는 어레이 안에 있는 하나하나의 데이터\n        // 맞는게 있으면 0, 1, 2 이런 데이터가 남는다 그걸 변수에 저장해준다\n        if(found >=0 ){ // found에서 찾은게 있으면 0부터 시작되니까\n         \n        let copy = [...state];\n        copy[found].quan++; //찾은 항목의 수량을 증가시킨다\n        return copy\n\n        }\n        else {\n\n        let copy = [...state];\n        copy.push(액션.데이터);\n        return copy\n        }\n      }\n\n      else if(액션.type=== '수량증가'){ //액션.type은 데이터 수정되는 조건\n        \n        let copy = [...state];\n        copy[액션.데이터].quan++;\n        return copy\n      }\n      else if(액션.type === '수량감소' ){\n        let copy = [...state];\n        if(copy[액션.데이터].quan >0){\n        copy[액션.데이터].quan--;\n        return copy\n        }\n        else{\n          return copy\n        }\n\n      }\n      else{\n        return state // state = 초기값\n      } \n}\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}